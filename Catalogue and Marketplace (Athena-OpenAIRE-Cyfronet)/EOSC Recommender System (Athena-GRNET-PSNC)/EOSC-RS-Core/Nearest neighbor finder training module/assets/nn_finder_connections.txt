title Nearest Neighbor Finder connections

participant "API\nOnline ML Engine" as online

box "Neighbor search"
  participant "API\nNN Finder" as nn_finder
  participant "Shared volume \n''app/indexers/''" as shared_volume
  participant "API\nNN Finder Downloader" as downloader
end box

database "HDFS" as hdfs

box "Index training"
  participant "API\nNN Finder Training Module" as train_index
  queue "Redis/RabbitMQ" as rabbit
  participant "Celery worker" as celery
end box

database "PostgreSQL" as postgresql

group Train index
  train_index->rabbit: Send training tasks \n- table_names
  rabbit->celery: Send training tasks \n- table_names
  celery<--postgresql: get data for training \n- tables metadata\n- embeddings
  note over celery: Create and train indexes
  celery-->hdfs: Save created indexes \n- indexes
end

group Download index
  nn_finder->downloader: Request download of indexes \n- table_names
  hdfs-->downloader: Download indexes \n- indexes
  downloader-->shared_volume: save indexes to disk \n- indexes
  downloader->nn_finder: Notify of new indexes
  shared_volume-->nn_finder: load index from disk \n- indexes
end

group Download relations graph (only on startup)
nn_finder<--hdfs: Download relations graph \n- graph dictionaries
end


group Search for nearest neighbors
online->nn_finder: Get nearest neighbors\n- number of neighbors,\n- context embeddings list 
note over nn_finder: Search
nn_finder->online: Nearest neighbors IDs\n(and optionally embeddings)
end

@enduml
